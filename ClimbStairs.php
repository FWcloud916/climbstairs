<?php
    // 您正在爬樓梯，樓梯具有 n 層階梯，您可以一次爬 1 層階梯，或是一次爬 2 層階梯，請問 n 層階梯有多少種方法可以登頂？
    // if n = 1, then 1, [1] , 1!
    // if n = 2, then 2, [(1,1), (2)], 2!
    // if n = 3, then 3, [(1,1,1), (1,2), (2,1)], 3!/2!
    // if n = 4, then 5, [(1,1,1,1), (1,1,2), (1,2,1), (2,1,1), (2,2)], 5!/3!
    // if n = 5, then 8, [(1,1,1,1,1), (1,1,1,2), (1,1,2,1), (1,2,1,1), (2,1,1,1), (1,2,2), (2,1,2), (2,2,1)]

    // f(1) = 1
    // f(2) = 2
    // f(3) = f(2) + f(1) = 3
    // f(4) = f(3) + f(2) = 5
    // f(5) = f(4) + f(3) = 8
    // f(6) = f(5) + f(4) = 13
    // f(7) = f(6) + f(5) = 21
    // f(8) = f(7) + f(6) = 34

    // f(n) = f(n-1) + f(n-2)

    /**
     * @param Integer $n
     * @return Integer
     */
    function climbStairs(int $n): int
    {
        $results = [0, 1, 2];
        for ($i = 3; $i <= $n; $i++) {
            $results[$i] = $results[$i - 1] + $results[$i - 2];
        }
        return $results[$n];
    }

    echo climbStairs(8);
